{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jsortega/Bootcamp/p3/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jsortega/Bootcamp/p3/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jsortega/Bootcamp/p3/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jsortega/Bootcamp/p3/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jsortega/Bootcamp/p3/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jsortega/Bootcamp/p3/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jsortega/Bootcamp/p3/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jsortega/Bootcamp/p3/client/src/components/view.jsx\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StatsCard from \"./statsCard\";\nimport axios from \"axios\";\nvar apiEndpoint = \"http://localhost/device/numserie/\";\n\nvar View =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(View, _Component);\n\n  function View() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, View);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(View)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(apiEndpoint + this.props.NumSerie);\n\n              case 2:\n                result = _context.sent;\n                console.log(result.data);\n                this.setState({\n                  data: result.data\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"formatDate\",\n    value: function formatDate(d) {\n      console.log(d);\n      var dateObject = new Date(d);\n      console.log(dateObject);\n      return dateObject.toLocaleDateString(\"es-MX\") + \" \" + dateObject.toLocaleTimeString();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Detail\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Process Name: \", this.props.ProcessName), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Sensor Number: \", this.props.NumSerie), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        value: this.state.data.slice(-1).pop().LectureP1,\n        text: \"Temperature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(StatsCard, {\n        value: \"70\",\n        text: \"Humidity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Data\"), React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Temperature (\\xBAC)\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Humidity (Relative%)\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        style: {\n          marginLeft: 0,\n          marginTop: 10\n        },\n        className: \"btn btn-success btn-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Return to List\")))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, //<Process processName=\"Proceso numero 1\" />\n      this.state.data.map(function (p) {\n        return React.createElement(\"tr\", {\n          key: p.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontStyle: \"Italic\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, _this2.formatDate(p.createdAt))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontStyle: \"Italic\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, p.LectureP1)), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontStyle: \"Italic\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, p.LectureP2)));\n      }))));\n    }\n  }]);\n\n  return View;\n}(Component);\n\nexport default View;","map":{"version":3,"sources":["/Users/jsortega/Bootcamp/p3/client/src/components/view.jsx"],"names":["React","Component","Link","StatsCard","axios","apiEndpoint","View","state","data","get","props","NumSerie","result","console","log","setState","d","dateObject","Date","toLocaleDateString","toLocaleTimeString","ProcessName","slice","pop","LectureP1","marginLeft","marginTop","map","p","id","fontStyle","formatDate","createdAt","LectureP2"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport StatsCard from \"./statsCard\";\nimport axios from \"axios\";\nconst apiEndpoint = \"http://localhost/device/numserie/\";\n\nclass View extends Component {\n  state = { data: [] };\n\n  async componentDidMount() {\n    const result = await axios.get(apiEndpoint + this.props.NumSerie);\n    console.log(result.data);\n    this.setState({ data: result.data });\n  }\n\n  formatDate(d) {\n    console.log(d);\n    const dateObject = new Date(d);\n    console.log(dateObject);\n    return (\n      dateObject.toLocaleDateString(\"es-MX\") +\n      \" \" +\n      dateObject.toLocaleTimeString()\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Detail</h1>\n        <h2>Process Name: {this.props.ProcessName}</h2>\n        <h2>Sensor Number: {this.props.NumSerie}</h2>\n        <span>\n          <StatsCard\n            value={this.state.data.slice(-1).pop().LectureP1}\n            text={\"Temperature\"}\n          />\n        </span>\n        <span>\n          <StatsCard value={\"70\"} text={\"Humidity\"} />\n        </span>\n        <h2>Data</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Date</th>\n              <th>Temperature (ºC)</th>\n              <th>Humidity (Relative%)</th>\n\n              <th>\n                <Link\n                  to=\"/login\"\n                  style={{ marginLeft: 0, marginTop: 10 }}\n                  className=\"btn btn-success btn-sm\"\n                >\n                  Return to List\n                </Link>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {//<Process processName=\"Proceso numero 1\" />\n            this.state.data.map(p => (\n              <tr key={p.id}>\n                <td>\n                  <span style={{ fontStyle: \"Italic\" }}>\n                    {this.formatDate(p.createdAt)}\n                  </span>\n                </td>\n                <td>\n                  <span style={{ fontStyle: \"Italic\" }}>{p.LectureP1}</span>\n                </td>\n                <td>\n                  <span style={{ fontStyle: \"Italic\" }}>{p.LectureP2}</span>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}